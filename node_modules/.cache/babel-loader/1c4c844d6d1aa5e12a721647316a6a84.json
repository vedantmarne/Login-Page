{"ast":null,"code":"/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = {};\n      }\n\n      temp = temp[k];\n    }\n  });\n};\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\n\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object) {\n    let parentKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    Object.entries(object).forEach(_ref => {\n      let [key, value] = _ref;\n\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key]);\n          } else {\n            callback([...parentKeys, key], value, object);\n          }\n        }\n      }\n    });\n  }\n\n  recurse(obj);\n};\n\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n\n    return `${value}px`;\n  }\n\n  return value;\n};\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  basePrefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `basePrefix`: defined by design system.\n *  `prefix`: defined by application\n *\n *   This function also mutate the string value of theme input by replacing `basePrefix` (if existed) with `prefix`\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme)\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: '#000000' } }\n * })\n *\n * console.log(css) // { '--fontSize': '12px', '--lineHeight': 1.2, '--palette-primary-500': '#000000' }\n * console.log(vars) // { fontSize: '--fontSize', lineHeight: '--lineHeight', palette: { primary: { 500: 'var(--palette-primary-500)' } } }\n */\n\n\nexport default function cssVarsParser(theme, options) {\n  const {\n    prefix,\n    basePrefix = '',\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  walkObjectDeep(theme, (keys, val, scope) => {\n    if (typeof val === 'string' || typeof val === 'number') {\n      let value = val;\n\n      if (typeof value === 'string' && value.startsWith('var')) {\n        // replace the value of the `scope` object with the prefix or remove basePrefix from the value\n        if (!basePrefix && prefix) {\n          value = value.replace(/var\\(--/g, `var(--${prefix}-`);\n        } else {\n          value = prefix ? value.replace(new RegExp(basePrefix, 'g'), prefix) : value.replace(new RegExp(`${basePrefix}-`, 'g'), '');\n        } // scope is the deepest object in the tree, keys is the theme path keys\n\n\n        scope[keys.slice(-1)[0]] = value;\n      }\n\n      if (!shouldSkipGeneratingVar || shouldSkipGeneratingVar && !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n  return {\n    css,\n    vars\n  };\n}","map":{"version":3,"names":["assignNestedKeys","obj","keys","value","temp","forEach","k","index","length","walkObjectDeep","callback","shouldSkipPaths","recurse","object","parentKeys","Object","entries","key","undefined","getCssValue","some","prop","includes","cssVarsParser","theme","options","prefix","basePrefix","shouldSkipGeneratingVar","css","vars","val","scope","startsWith","replace","RegExp","slice","cssVar","join","assign"],"sources":["E:/test projects/testpro/my-cart-ui (1)/node_modules/@mui/system/esm/cssVars/cssVarsParser.js"],"sourcesContent":["/**\n * This function create an object from keys, value and then assign to target\n *\n * @param {Object} obj : the target object to be assigned\n * @param {string[]} keys\n * @param {string | number} value\n *\n * @example\n * const source = {}\n * assignNestedKeys(source, ['palette', 'primary'], 'var(--palette-primary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)' } }\n *\n * @example\n * const source = { palette: { primary: 'var(--palette-primary)' } }\n * assignNestedKeys(source, ['palette', 'secondary'], 'var(--palette-secondary)')\n * console.log(source) // { palette: { primary: 'var(--palette-primary)', secondary: 'var(--palette-secondary)' } }\n */\nexport const assignNestedKeys = (obj, keys, value) => {\n  let temp = obj;\n  keys.forEach((k, index) => {\n    if (index === keys.length - 1) {\n      if (temp && typeof temp === 'object') {\n        temp[k] = value;\n      }\n    } else if (temp && typeof temp === 'object') {\n      if (!temp[k]) {\n        temp[k] = {};\n      }\n\n      temp = temp[k];\n    }\n  });\n};\n/**\n *\n * @param {Object} obj : source object\n * @param {Function} callback : a function that will be called when\n *                   - the deepest key in source object is reached\n *                   - the value of the deepest key is NOT `undefined` | `null`\n *\n * @example\n * walkObjectDeep({ palette: { primary: { main: '#000000' } } }, console.log)\n * // ['palette', 'primary', 'main'] '#000000'\n */\n\nexport const walkObjectDeep = (obj, callback, shouldSkipPaths) => {\n  function recurse(object, parentKeys = []) {\n    Object.entries(object).forEach(([key, value]) => {\n      if (!shouldSkipPaths || shouldSkipPaths && !shouldSkipPaths([...parentKeys, key])) {\n        if (value !== undefined && value !== null) {\n          if (typeof value === 'object' && Object.keys(value).length > 0) {\n            recurse(value, [...parentKeys, key]);\n          } else {\n            callback([...parentKeys, key], value, object);\n          }\n        }\n      }\n    });\n  }\n\n  recurse(obj);\n};\n\nconst getCssValue = (keys, value) => {\n  if (typeof value === 'number') {\n    if (['lineHeight', 'fontWeight', 'opacity', 'zIndex'].some(prop => keys.includes(prop))) {\n      // CSS property that are unitless\n      return value;\n    }\n\n    return `${value}px`;\n  }\n\n  return value;\n};\n/**\n * a function that parse theme and return { css, vars }\n *\n * @param {Object} theme\n * @param {{\n *  prefix?: string,\n *  basePrefix?: string,\n *  shouldSkipGeneratingVar?: (objectPathKeys: Array<string>, value: string | number) => boolean\n * }} options.\n *  `basePrefix`: defined by design system.\n *  `prefix`: defined by application\n *\n *   This function also mutate the string value of theme input by replacing `basePrefix` (if existed) with `prefix`\n *\n * @returns {{ css: Object, vars: Object }} `css` is the stylesheet, `vars` is an object to get css variable (same structure as theme)\n *\n * @example\n * const { css, vars } = parser({\n *   fontSize: 12,\n *   lineHeight: 1.2,\n *   palette: { primary: { 500: '#000000' } }\n * })\n *\n * console.log(css) // { '--fontSize': '12px', '--lineHeight': 1.2, '--palette-primary-500': '#000000' }\n * console.log(vars) // { fontSize: '--fontSize', lineHeight: '--lineHeight', palette: { primary: { 500: 'var(--palette-primary-500)' } } }\n */\n\n\nexport default function cssVarsParser(theme, options) {\n  const {\n    prefix,\n    basePrefix = '',\n    shouldSkipGeneratingVar\n  } = options || {};\n  const css = {};\n  const vars = {};\n  walkObjectDeep(theme, (keys, val, scope) => {\n    if (typeof val === 'string' || typeof val === 'number') {\n      let value = val;\n\n      if (typeof value === 'string' && value.startsWith('var')) {\n        // replace the value of the `scope` object with the prefix or remove basePrefix from the value\n        if (!basePrefix && prefix) {\n          value = value.replace(/var\\(--/g, `var(--${prefix}-`);\n        } else {\n          value = prefix ? value.replace(new RegExp(basePrefix, 'g'), prefix) : value.replace(new RegExp(`${basePrefix}-`, 'g'), '');\n        } // scope is the deepest object in the tree, keys is the theme path keys\n\n\n        scope[keys.slice(-1)[0]] = value;\n      }\n\n      if (!shouldSkipGeneratingVar || shouldSkipGeneratingVar && !shouldSkipGeneratingVar(keys, value)) {\n        // only create css & var if `shouldSkipGeneratingVar` return false\n        const cssVar = `--${prefix ? `${prefix}-` : ''}${keys.join('-')}`;\n        Object.assign(css, {\n          [cssVar]: getCssValue(keys, value)\n        });\n        assignNestedKeys(vars, keys, `var(${cssVar})`);\n      }\n    }\n  }, keys => keys[0] === 'vars' // skip 'vars/*' paths\n  );\n  return {\n    css,\n    vars\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}